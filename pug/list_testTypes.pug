extend default

include common.pug

block vars
  - var page_title = "Test Types";
  
block content
  .container-fluid
    pre #{''}
    pre #{''}
  
    if(permissions.userHas(user, "forms:edit"))
      a.NewTestType.btn.btn-outline-primary(href = '#', data-toggle = "modal" data-target = "#NewTestTypeModal") Create New Test Type Form
    
      #NewTestTypeModal.modal.fade(tabindex = '-1' role = 'dialog' aria-labelledby = 'NewTestTypeLabel' aria-hidden = 'true')
        .modal-dialog(role = "document")
          .modal-content
            .modal-header
              h5#NewTestTypeLabel.modal-title New Test Type
              button.close(type = "button", data-dismiss = "modal", aria-label = "Close")
                span(aria-hidden = true) &times;
            .modal-body
              div
                | Enter the new test type's form ID.
                br
                | NOTE: this ID should have only underscores and alphanumerics - the human-readable name will be set on the next page.
                input.NewTestTypeName.form-control(type = "text")
            .modal-footer
              button.btn.btn-secondary(type = "button", data-dismiss = "modal") Close
              button.btn.btn-primary.NewTestTypeButton(type = "button") Create
      script.
        $('button.NewTestTypeButton').click(function()
        {
          window.location.href = "/tests/" + $('button.NewTestTypeButton').parents('.modal-content').find('input').val() + "/new";
        })
        $('input.NewTestTypeName').on("keyup",function(e)
        {
          if(e.key=="Enter")
          {
            window.location.href = "/tests/" + $(this).val() + "/new";
          }
        })
    
      pre #{''}
      pre #{''}

    h3 Existing Test Types

    table.table
      thead
        tr
          th.col-md-1
          th.col-md-2 Name
          th.col-md-2
          th.col-md-3
          th.col-md-2
    
      tbody
        each formId in Object.keys(forms).sort()
          - var info = forms[formId];
        
          if(!info.tags || !info.tags.includes("Trash")) 
            tr
              td
                img.icon(src = info.icon)
              td
                a(href = '/tests/' + formId) #{(info.formName || formId)}
            
              if(permissions.userHas(user, "tests:submit"))
                td
                  a(href = '/test/' + formId).btn.btn-outline-primary 
                    img.small-icon(src = '/images/run_icon.svg')
                    | &nbsp; Run on Single Component

              if(permissions.userHas(user, "tests:submit"))
                td
                  a(href = '/test/' + formId + '/multiComponent').btn.btn-outline-primary 
                    img.small-icon(src = '/images/run_multiple_icon.svg')
                    | &nbsp; Run On Multiple Components
            
              if(permissions.userHas(user, "forms:edit"))
                td
                  a(href = '/tests/' + formId + '/edit').btn.btn-outline-warning 
                    img.small-icon(src = '/images/edit_icon.svg')
                    | &nbsp; Edit Test Type Form


    pre #{''}
    pre #{''}

    if(permissions.userHas(user, "forms:edit"))
      h3 Trashed Test Types
    
      table.table
        thead
          tr
            th.col-md-1
            th.col-md-2 Name
            th.col-md-2
            th.col-md-3
            th.col-md-2
    
        tbody
          each formId in Object.keys(forms).sort()
            - var info = forms[formId];
          
            if(info.tags && info.tags.includes("Trash")) 
              tr
                td
                  img.icon(src = info.icon)
                td
                  a(href = '/tests/' + formId) #{(info.formName || formId)}
                
                td
                td
                
                if(permissions.userHas(user, "forms:edit"))
                  td
                    a(href = '/tests/' + formId + '/edit').btn.btn-outline-warning 
                      img.small-icon(src = '/images/edit_icon.svg')
                      | &nbsp; Edit Test Type Form

