
extend default

mixin label-link
  a(href="/"+componentUuid+"/label") Printable labels for this component

block vars
  - var page_title=(component||{}).name || componentUuid;

block extrascripts
  script(type='text/javascript').
    var componentUuid = "!{componentUuid}";
    // I could do this by API query of the server, but this works for now.
    var schema=!{JSON.stringify(schema||{})};
    var component=!{JSON.stringify(component||{})};
  


  script(type='text/javascript').

      var form = null;
      var metaform = null;
      function SubmitData(submission) {
        // actually the 'submit' function
        var record = {...submission};
        // metadata:
        record.componentUuid = componentUuid; 
        // only set desired startdate.
        record.validity = { startDate: metaform.submission.data.startDate };

        console.log("submitting data",record);
        var posting =  $.ajax(
          { contentType: "application/json",
            method: "post",
            url: "/json/component/"+componentUuid,
            data: JSON.stringify(record),
            dataType: "json",
          }
        );


        //- $.post('/json/component/'+componentUuid,submission);

        posting.done(function(retval) {
          // POST operation completed but..
          console.log('posting.done',retval);
          if((retval.error)) {
            form.setAlert("warning",c.error);
          form.emit('error', c.error);
          } else form.setAlert(false);
          if(retval.data) form.submission = {data:retval.data};
          if(window.location.pathname.includes("NewComponent")) {
            // Change the URL to match th new component componentUuid, so we're now editing
            history.replaceState(null, null, retval.componentUuid+'/edit');
            $('#name').html(submission.name);
          }

          // jump to the view page on edit complete.
          form.emit('submitDone', retval.submission);
          console.log("success retval",retval);
          if(retval.componentUuid)
            window.location.assign('/'+retval.componentUuid)
  
        });
        posting.fail(function(res,statusCode,statusMsg) {
          // On failure, add a failure message
          if(res.responseText && res.responseText.length>0) form.setAlert("danger",res.responseText);
          else                                              form.setAlert("danger",statusMsg + " ("+statusCode+")");
          //- alert("posting failed");
          console.log("posting fail",res,statusCode,statusMsg);
        });

      };

    var shortuuid = window.ShortUUID();

    window.onload = async function() {
      console.log("schema",schema);

      // add submit button to schema.
      schema.components.push({      
        type: "button",
        label: "Submit",
        key: "submit",
        disableOnInvalid: true,
        input: true,
        tableView: false
      });
      form = await Formio.createForm(document.getElementById('builtform'),schema);
      metaform = await Formio.createForm(document.getElementById('metaform'),
      { components: [
                        {
                            "label": "These changes take effect on:",
                            "tableView": false,
                            "enableMinDateInput": false,
                            "datePicker": {
                                "disableWeekends": false,
                                "disableWeekdays": false
                            },
                            "enableMaxDateInput": false,
                            "key": "validity.startDate",
                            "type": "datetime",
                            "input": true,
                            "widget": {
                                "type": "calendar",
                                "displayInTimezone": "viewer",
                                "language": "en",
                                "useLocaleSettings": false,
                                "allowInput": true,
                                "mode": "single",
                                "enableTime": true,
                                "noCalendar": false,
                                "format": "yyyy-MM-dd hh:mm a",
                                "hourIncrement": 1,
                                "minuteIncrement": 1,
                                "time_24hr": false,
                                "minDate": null,
                                "disableWeekends": false,
                                "disableWeekdays": false,
                                "maxDate": null
                            },
                            "hideOnChildrenHidden": false
                        }
      ] });
      var metaformdata = {...component};
      metaformdata.validity = metaformdata.validity||{};
      if(metaformdata.validity.version>=0) metaformdata.validity.version+=1;

      // If the start date is in the past, make the new start date 'now'
      if(metaformdata.validity.startDate) {
        if(moment(metaformdata.validity.startDate).isBefore(moment())) 
          metaformdata.validity.startDate = moment().toISOString();
      } else {
        metaformdata.validity.startDate = moment().toISOString();
      }

      metaform.submission = {data: metaformdata};

      metaform.nosubmit = true;

      form.submission = {data: component.data};
      form.on('submit',SubmitData);
      form.nosubmit = true; // Use the beforeSubmit hook.

      // Change the url to match

      DrawQRCode($('#qrcode-canvas').get(0),"!{base_url}/"+componentUuid);

      

      }

  style.
    div#qr-code {
    }
    div#qr-code canvas {
      border: 8px solid green;
      border-radius: 8px;
      width:100%;
      height:auto
    }
block content
  .container-fluid
    .row
      h2#name
          =(component.data||{}).type?("Editing " + component.data.type + ": " + component.data.name):"New Component"
    .row
        | Component UUID: 
        |
        =component.componentUuid
    .row 
      +label-link
    .row
      #metaform
    .row
      #builtform

