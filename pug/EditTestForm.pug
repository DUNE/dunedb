extend default

block extrascripts
  style.
      .formbuilder_area { border: 5px solid red; border-radius: 10px; padding:5px;}

  script(type='text/javascript').
      //- var record=!{JSON.stringify(rec, null ,4)};
      var form_id = "!{form_id}";
      var collection = "!{collection}";
      

  block metaschema
    script(type='text/javascript').

      var metaschema = {
        "components": [
        
          {
            "label": "Commit Form",
            "showValidations": false,
            "theme": "info",
            "disableOnInvalid": true,
            "tableView": false,
            "key": "submit",
            "type": "button",
            "input": true,
            "validate": {
              "unique": false,
              "multiple": false
            }
          },
          {
            "label": "form_id",
            "key": "form_id",
            "type": "hidden",
            "input": true,
            "tableView": false,
            "validate": {
              "unique": false,
              "multiple": false
            }
          },
          {
            "label": "Form Title",
            "spellcheck": true,
            "tableView": true,
            "validate": {
              "unique": false,
              "required": true,
              "multiple": false
            },
            "key": "form_title",
            "type": "textfield",
            "input": true
          },

          {
                "label": "Columns",
                "columns": [
                  {
                    "components": [
                      {
                        "label": "Version",
                        "mask": false,
                        "spellcheck": true,
                        "disabled": true,
                        "tableView": false,
                        "delimiter": false,
                        "requireDecimal": false,
                        "inputFormat": "plain",
                        "validate": {
                          "unique": false,
                          "multiple": false
                        },
                        "key": "version",
                        "type": "number",
                        "input": true,
                        "hideOnChildrenHidden": false
                      }
                    ],
                    "width": 3,
                    "offset": 0,
                    "push": 0,
                    "pull": 0
                  },
                  {
                    "components": [
                      {
                        "label": "Last Revised by",
                        "spellcheck": true,
                        "disabled": true,
                        "tableView": true,
                        "validate": {
                          "unique": false,
                          "multiple": false
                        },
                        "key": "revised_by",
                        "type": "textfield",
                        "input": true,
                        "hideOnChildrenHidden": false
                      }
                    ],
                    "width": 3,
                    "offset": 0,
                    "push": 0,
                    "pull": 0
                  },
                  {
                    "components": [
                      {
                      "label": "Revised on",
                      "disabled": true,
                      "tableView": false,
                      "validate": {
                        "unique": false,
                        "multiple": false
                      },
                      "key": "effectiveDate",
                      "type": "datetime",
                      "input": true,
                      "suffix": "<i ref=\"icon\" class=\"fa fa-calendar\" style=\"\"></i>",
                      "widget": {
                        "type": "calendar",
                        "displayInTimezone": "viewer",
                        "language": "en",
                        "useLocaleSettings": false,
                        "allowInput": true,
                        "mode": "single",
                        "enableTime": true,
                        "noCalendar": false,
                        "format": "yyyy-MM-dd hh:mm a",
                        "hourIncrement": 1,
                        "minuteIncrement": 1,
                        "time_24hr": false,
                        "minDate": null,
                        "maxDate": null
                      }
                    },
                    ],
                    "width": 3,
                    "offset": 0,
                    "push": 0,
                    "pull": 0
                  }
                ],
                "tableView": false,
                "key": "columns",
                "type": "columns",
                "input": false,
                "validate": {
                  "unique": false,
                  "multiple": false
                },
                "path": "columns"
              },

          {
            "label": "formbuilder",
            "tag": "div",
            "className": "formbuilder_area",
            "attrs": [
              {
                "attr": "",
                "value": ""
              }
            ],
            "refreshOnChange": false,
            "tableView": false,
            "key": "formbuilder",
            "type": "htmlelement",
            "input": false,
            "validate": {
              "unique": false,
              "multiple": false
            }
          },
          {
            "label": "schema",
            "key": "schema",
            "type": "hidden",
            "input": true,
            "tableView": false,
            "validate": {
              "unique": false,
              "multiple": false
            }
          },

          {
            "label": "Commit Form",
            "showValidations": false,
            "theme": "info",
            "disableOnInvalid": true,
            "tableView": false,
            "key": "submit",
            "type": "button",
            "input": true,
            "validate": {
              "unique": false,
              "multiple": false
            }
          }
        ]
      };

  block workscripts
    script.
      function updateSchemaField(schema)
      {
        $('#schema').val(JSON.stringify(schema,null,2));
        var schema_blob = new Blob([JSON.stringify(schema,null,2)],{type: 'application/JSON'});
        var schema_save_url = window.URL.createObjectURL(schema_blob);
        $('#download_schema_link').attr('href',schema_save_url);
      }
      function onBuild() {
        //- var schema_element = document.getElementById('schema');

        metaform.submission.data.schema = builder.instance.schema; // Copy it over.
        updateSchemaField(builder.instance.schema);
        console.log("onBuild",JSON.stringify(builder.instance.schema));

      };
      var gformdata;

      function schemaRecordChange(formdata) {
          console.log("schemaRecordChange",formdata);
          gformdata = formdata;
          metaform.submission.data.revised_by = ((formdata.submit||{}).user||{}).displayName;
          metaform.submission = {data: formdata};
          // If no form title, autofill with the form ID
          if(!formdata.form_title || (formdata.form_title.length==0))
            formdata.form_title = formdata.form_id;
          updateSchemaField(formdata.schema);

          builder = new Formio.FormBuilder(
              $('.formbuilder_area').get(0), // html element
              formdata.schema||{}, // starting schema
              {
                   builder: {
                      //- basic: true,
                      //- advanced: true,
                      //- data: true,
                      //- layout: true,

                      custom: {
                        title: 'Custom',
                        default: false,
                        weight: 10,
                        components: {
                          ComponentUUID:true,
                          CustomGeoTagComponent: true,
                          ArrayComponent: true,
                          SpecNumberComponent: true,
                        
                        }
                      }
                  }
              }
          );
          $('input#commit-schema').val(JSON.stringify(schema));
            builder.instance.ready.then(function(){
            if(builder_wizard) builder.setDisplay('wizard').then(onBuild);
            else onBuild();

            builder.instance.on('saveComponent',onBuild);
            builder.instance.on('editComponent',onBuild);
          });
      }

      function SubmitData(submission) {
        console.log("submitting data",submission);
        $.post({
            contentType: 'application/json',
            url:  "/json/"+collection+"/"+form_id,
            data: JSON.stringify(submission.data),
            success: schemaRecordChange
        }).fail(function(res,statusCode,statusMsg) {
          // On failure, add a failure message
          if(res.responseText && res.responseText.length>0) metaform.setAlert("danger",res.responseText);
          else                                              metaform.setAlert("danger",statusMsg + " ("+statusCode+")");
          //- alert("posting failed");
          console.log("posting fail",res,statusCode,statusMsg);
        });

      };


      window.onload = async function() {
        //- console.log("schema",record.schema);
        // First, modify the metaschema based on the component type list

        // Create the metaform
        metaform = await Formio.createForm(document.getElementById('metaform'),metaschema);
        console.log("metaform built",metaform);
        metaform.on('submit',SubmitData);
   
        $.get('/json/'+collection+'/'+form_id,schemaRecordChange).fail(function(){
              $('#builder').html("No such form exists.")
          });

   
        // validate on client side.
        $('#commit').on('click',function(event){
          if($('input#form_id').val().length<1) {alert("Need to enter a form ID"); return false;}
          if($('input#form_title').val().length<1) {alert("Need to enter a form title"); return false;}

          var data = $( '#metaform'  ).serialize();
          $.post({
            url: '/json/'+collection+'/'+form_id,
            data: data,
            success: schemaRecordChange
          }).fail(function(j,textStatus,errorThrown){
              $('#builder').html("something went wrong,could not post: "+textStatus);
          });
          return false;
        });

        $('#schema').change(function(){
          builder.form = JSON.parse($('#schema').val());
          console.log("updated schema json->builder")
          //- builder.instance.redraw();
        })

      };




block content
  h2=form_id
  div#metaform



  a#download_schema_link(download=form_id+".json", href="") Download Form Record JSON

  .panel.panel-default
  .foldable-heading.panel-heading.collapsed(data-toggle='collapse' data-target='#json-holder')
    | Schema JSON (for debugging) 
    i.chevron.fa.fa-fw
  div#json-holder.collapse
    textarea#schema.form-control(rows=20)


