extend default
include common.pug

block vars
  - const page_title = 'All Component Types';

block extrascripts
  block workscripts
    script(src = '/pages/component_listTypes.js')

block content
  .container-fluid
    .vert-space-x2
      a.btn.btn-warning(href = '#', data-toggle = 'modal' data-target = '#NewTypeModal')
        img.small-icon(src = '/images/edit_icon.svg')
        | &nbsp; Create New Component Type Form

      .modal.fade#NewTypeModal(tabindex = '-1' role = 'dialog' aria-labelledby = 'NewTypeLabel' aria-hidden = 'true')
        .modal-dialog(role = 'document')
          .modal-content
            .modal-header
              h5.modal-title#NewTypeLabel Create New Component Type Form
              button.close(type = 'button', data-dismiss = 'modal', aria-label = 'Close')
                span(aria-hidden = 'true') &times;
            .modal-body
              p Enter the new component type form ID.
                br
                | NOTE: this ID must have only underscores and alphanumerics (no spaces, hyphens or special characters).  A human-readable name can be set on the next page.
              .vert-space-x1
                input.form-control#formId(type = 'text')
            .modal-footer
              button.btn.btn-danger(type = 'button', data-dismiss = 'modal') Close
              button.btn.btn-success#NewTypeButton(type = 'button') Create

    .vert-space-x2
      h2 Available Component Types

    .vert-space-x1
      table.table 
        thead
          tr
            th.col-md-3 Type Name
            th.col-md-2 Component Count
            th.col-md-3
            th.col-md-2

        tbody
          each typeFormId in Object.keys(componentCountsByType).sort()
            - const typeForm = componentCountsByType[typeFormId];

            if typeForm.tags && !typeForm.tags.includes('Trash')
              tr
                td
                  a(href = `/components/${typeFormId}/list`) #{typeForm.formName}

                if typeForm.count
                  td #{typeForm.count}
                else 
                  td 0

                td
                  a.btn-sm.btn-primary(href = `/component/${typeFormId}`)
                    img.small-icon(src = '/images/run_icon.svg')
                    | &nbsp; Create New Component of This Type
                td
                  a.btn-sm.btn-warning(href = `/componentTypes/${typeFormId}/edit`)
                    img.small-icon(src = '/images/edit_icon.svg')
                    | &nbsp; Edit Component Type Form

    if permissions.userHas(user, 'forms:edit')
      .vert-space-x2
        h2 Trashed Component Types

      .vert-space-x1
        table.table
          thead
            tr
              th.col-md-3 Type Name
              th.col-md-2 Component Count
              th.col-md-3
              th.col-md-2

          tbody
            each typeFormId in Object.keys(componentCountsByType).sort()
              - const typeForm = componentCountsByType[typeFormId];

              if typeForm.tags && typeForm.tags.includes('Trash')
                tr
                  td
                    a(href = `/components/${typeFormId}/list`) #{typeForm.formName}

                  if typeForm.count
                    td #{typeForm.count}
                  else 
                    td 0

                  td
                  td
                    a.btn-sm.btn-warning(href = `/componentTypes/${typeFormId}/edit`)
                      img.small-icon(src = '/images/edit_icon.svg')
                      | &nbsp; Edit Component Type Form

    .vert-space-x2
