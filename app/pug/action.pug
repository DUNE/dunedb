extend default
include common.pug

block vars
  - const page_title = 'View Action Information';

block extrascripts
  script(type = 'text/javascript').
    const action = !{JSON.stringify(action, null, 4)};
    const actionVersions = !{JSON.stringify(actionVersions, null, 4)};
    const actionTypeForm = !{JSON.stringify(actionTypeForm, null, 4)};
    const component = !{JSON.stringify(component, null, 4)};
    const queryDictionary = !{JSON.stringify(queryDictionary, null, 4)};

  block workscripts
    script(src = '/pages/action.js')

block content
  .container-fluid
    .vert-space-x2
      h2 View Action Information

    .vert-space-x1
      dl
        dt Action Type
        dd 
          .form-inline
            a #{action.typeFormName}

            .hori-space-x1
              a.btn-sm.btn-primary(href = `/action/${action.typeFormId}/unspec`)
                img.small-icon(src = '/images/run_icon.svg')
                | &nbsp; Perform New Action of This Type

        dt Action ID
        dd
          .form-inline
            a(href = `/action/${action.actionId}`) #{action.actionId}

            .hori-space-x1
              a.copybutton.btn-sm#copy_id(onclick = 'CopyID(action.actionId)') Copy

        - const uuid = MUUID.from(action.componentUuid).toString();

        dt Performed on Component:
        dd UUID: 
          a(href = `/component/${uuid}`) #{uuid}
          br
          | Type: #{component.formName}
          br
          | Name: #{component.data.name}

        if action.workflowId
          dt Part of Workflow:
          dd
            a(href = `/workflow/${action.workflowId}`, target = '_blank') #{action.workflowId}

        dt Action Data:
        dd This is version #{action.validity.version} of the action, and it was last performed on !{' '}
          +dateFormat(action.insertion.insertDate)

          if action.insertion.user
            |  by !{' '}
            a(href = `mailto:${user_email(action.insertion.user)}`) #{action.insertion.user.displayName}

          .vert-space-x1.border-success.border.rounded.p-2
            #typeform

          .vert-space-x1

        if (action.typeFormId == 'x_tension_testing') && (action.data.changedTensions_sideA)
          dt Re-tensioned Wires or Wire Segments (comparing this version [#{action.validity.version}] and version #{action.validity.version - 1}):

          - let numberOfChangedTensions_sideA = action.data.changedTensions_sideA.length
          - let numberOfChangedTensions_sideB = action.data.changedTensions_sideB.length

          .row
            .col-md-6
              .panel.panel-default
              .foldable-heading.panel-heading.collapsed(data-toggle = 'collapse' data-target = '#reTensionsBoxA')
                | #{numberOfChangedTensions_sideA} on side A: 
                i.chevron.fa.fa-fw 

              .collapse#reTensionsBoxA
                if numberOfChangedTensions_sideA > 0
                  .vert-space-x1.border-success.border.rounded.p-2
                    dd
                      table.table
                        thead
                          tr
                            th.col-md-2 Index of Wire or Wire Segment
                            th.col-md-2 Original Tension (N)
                            th.col-md-2 Latest Tension (N)

                        tbody
                          each changedTension in action.data.changedTensions_sideA
                            tr
                              td #{changedTension[0]}
                              td #{changedTension[1]}
                              td #{changedTension[2]}
            .col-md-6
              .panel.panel-default
              .foldable-heading.panel-heading.collapsed(data-toggle = 'collapse' data-target = '#reTensionsBoxB')
                | #{numberOfChangedTensions_sideB} on side B: 
                i.chevron.fa.fa-fw 

              .collapse#reTensionsBoxB
                if numberOfChangedTensions_sideB > 0
                  .vert-space-x1.border-success.border.rounded.p-2
                    dd
                      table.table
                        thead
                          tr
                            th.col-md-2 Index of Wire or Wire Segment
                            th.col-md-2 Original Tension (N)
                            th.col-md-2 Latest Tension (N)

                        tbody
                          each changedTension in action.data.changedTensions_sideB
                            tr
                              td #{changedTension[0]}
                              td #{changedTension[1]}
                              td #{changedTension[2]}

          .vert-space-x2 

        if (action.typeFormId == 'FrameVerticalInspection')
          if (action.data.envelope)
            .vert-space-x1
              - let outOfSpecCount = 0

              for [key, value] of Object.entries(action.data.envelope)
                if key < 4
                  if value['Deviation from nominal'] >= value['Tolerance']
                    - outOfSpecCount += 1
                else
                  if (value['Deviation from nominal'] <= (-1.0 * value['Tolerance'])) || (value['Deviation from nominal'] >= value['Tolerance'])
                    - outOfSpecCount += 1

              .panel.panel-default
              .foldable-heading.panel-heading.collapsed(data-toggle = 'collapse' data-target = '#envelopeBox')
                | Envelope Analysis (#{outOfSpecCount} results outside tolerance): 
                i.chevron.fa.fa-fw 

              .collapse#envelopeBox
                .vert-space-x1.border-success.border.rounded.p-2
                  dd
                    table.table
                      thead
                        tr
                          th.col-md-3 Measurement
                          th.col-md-1 Units
                          th.col-md-1 Position
                          th.col-md-1 Nominal 
                          th.col-md-1 Tolerance 
                          th.col-md-1 Actual
                          th.col-md-1 Deviation
                          th.col-md-1 EDMS ID 
                          th.col-md-2 Comments

                      tbody
                        for [key, value] of Object.entries(action.data.envelope)
                          tr
                            td #{value['Measurement']}
                            td #{value['Units']}
                            td #{value['Position']}
                            td #{value['Nominal'].toFixed(2)}
                            td #{value['Tolerance'].toFixed(2)}

                            if value['Actual'] == '-'
                              td #{value['Actual']}
                            else 
                              td #{value['Actual'].toFixed(2)}

                            if key < 4
                              if value['Deviation from nominal'] < value['Tolerance']
                                td.text-success.font-weight-bold #{value['Deviation from nominal'].toFixed(2)}
                              else
                                td.text-danger.font-weight-bold #{value['Deviation from nominal'].toFixed(2)}
                            else
                              if (value['Deviation from nominal'] > (-1.0 * value['Tolerance'])) && (value['Deviation from nominal'] < value['Tolerance'])
                                td.text-success.font-weight-bold #{value['Deviation from nominal'].toFixed(2)}
                              else
                                td.text-danger.font-weight-bold #{value['Deviation from nominal'].toFixed(2)}

                            td 
                              a(href = `https://edms.cern.ch/document/${value['EDMS ID']}`, target = '_blank') #{value['EDMS ID']}
                            td #{value['Comments']}

          if (action.data.planarity)
            .vert-space-x1
              - outOfSpecCount = 0

              for [key, value] of Object.entries(action.data.planarity)
                if (value.Units !== null) && (value.Actual >= value.Tolerance)
                  - outOfSpecCount += 1

              .panel.panel-default
              .foldable-heading.panel-heading.collapsed(data-toggle = 'collapse' data-target = '#planarityBox')
                | Planarity Analysis (#{outOfSpecCount} results outside tolerance): 
                i.chevron.fa.fa-fw 

              .collapse#planarityBox
                .vert-space-x1.border-success.border.rounded.p-2
                  dd
                    table.table
                      thead
                        tr
                          th.col-md-2 Measurement
                          th.col-md-1 Actual
                          th.col-md-1 Units
                          th.col-md-1 Tolerance 
                          th.col-md-7 Comment

                      tbody
                        for [key, value] of Object.entries(action.data.planarity)
                          tr
                            td #{value.Measurement}

                            if value.Units !== null
                              if value.Actual < value.Tolerance
                                td.text-success.font-weight-bold #{value.Actual.toFixed(3)}
                              else
                                td.text-danger.font-weight-bold #{value.Actual.toFixed(3)}

                              td #{value.Units}
                              td #{value.Tolerance.toFixed(2)}

                            else 
                              td #{value.Actual}
                              td
                              td #{value.Tolerance}

                            td #{value.Comment}

          .vert-space-x2 

        if action.typeFormId == 'action_test' || action.typeFormId == 'APANonConformance' || action.typeFormId == 'x_tension_testing'
          dt Add Images to Action Record:
          dd Please use the 'Select Images' button below to select one or more images from your device to add to this action record.  Once you are happy with your selection, please use the 'Confirm Images' button to finalise the upload.
            br
            | Please make sure that your <b>images are individually no more than <u>1MB</u> in size</b>, and <b>please do not add more than <u>5 images</u> in total to any single record</b>.

            .vert-space-x1.form-inline
              label.btn.btn-primary(for = 'image-selector')
                input.custom-file-input#image-selector(type = 'file', style = 'display:none', onchange = 'DisplayFileNames(this)', multiple)
                | Select Images

              .hori-space-x2
                label.label-info#image-filenames 

              .hori-space-x2
                a.btn-danger.btn-sm#confirm-button(onclick = 'EncodeStoreImages()') Confirm Upload

            if action.images
              .vert-space-x1
                .panel.panel-default
                .foldable-heading.panel-heading.collapsed(data-toggle = 'collapse' data-target = '#imagesBox')
                  | View Gallery (#{action.images.length} images): 
                  i.chevron.fa.fa-fw 

                .collapse#imagesBox
                  each imageString in action.images
                    img.in-gallery(src = imageString)

    .vert-space-x2
      .panel.panel-default
      .foldable-heading.panel-heading.collapsed(data-toggle = 'collapse' data-target = '#versionsBox')
        | All Versions: 
        i.chevron.fa.fa-fw 

      .collapse#versionsBox
        ul
          each v in actionVersions
            li 
              a(href = `?version=${v.validity.version}`) Version #{v.validity.version}
              |  on 
              +dateFormat(v.insertion.insertDate)

              if v.insertion.user
                |  by !{' '}
                a(href = `mailto:${user_email(v.insertion.user)}`) #{v.insertion.user.displayName}

    .vert-space-x2.form-inline

      a.btn.btn-warning(href = `/action/${action.actionId}/edit`)
        img.small-icon(src = '/images/edit_icon.svg')
        | &nbsp; Edit Action

      - let jsonURLString = `/json/action/${action.actionId}`;
      - if ('version' in queryDictionary) jsonURLString += `?version=${queryDictionary.version}`;

      .hori-space-x2
        a.btn.btn-secondary(href = `${jsonURLString}`, target = '_blank')
          img.small-icon(src = '/images/checklist_icon.svg')
          | &nbsp; View JSON Record

    .vert-space-x2
